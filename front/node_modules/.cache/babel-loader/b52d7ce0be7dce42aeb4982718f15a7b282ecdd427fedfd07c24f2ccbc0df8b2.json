{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devi\\\\Documents\\\\Nikita\\\\vgu-doc-project\\\\src\\\\components\\\\SignUp.jsx\",\n  _s = $RefreshSig$();\nimport { useDispatch } from 'react-redux'; // Получив пользователя, кладем его в redux\nimport { useNavigate } from 'react-router-dom';\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { Form } from './Form';\nimport { setUser } from '../pages/store/slices/userSlice';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUp = () => {\n  _s();\n  const dispatch = useDispatch(); // копия \n  const navigate = useNavigate();\n  const handleRegister = (email, password) => {\n    // функция, при вызове которой учетные данные из формы отправятся на сервер и мы получим нужного пользователя\n    const auth = getAuth();\n    createUserWithEmailAndPassword(auth, email, password) // Запрос , возвращает промис с определенной информацией о пользователе\n    .then(_ref => {\n      let {\n        user\n      } = _ref;\n      // Нам нужен только пользователь, деструктурируем его\n      console.log(user);\n      dispatch(setUser({\n        // Устанавливаем нужный объект, тот самый который мы ожидаем в payload\n        email: user.email,\n        id: user.uid,\n        token: user.accesToken\n      }));\n      navigate(\"/\");\n    }).catch(console.error);\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    title: \"\\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\",\n    handleClick: handleRegister\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(SignUp, \"R1L93MxeLXzQXESpmjjjQSuQgvM=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = SignUp;\nexport { SignUp };\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["useDispatch","useNavigate","getAuth","createUserWithEmailAndPassword","Form","setUser","React","jsxDEV","_jsxDEV","SignUp","_s","dispatch","navigate","handleRegister","email","password","auth","then","_ref","user","console","log","id","uid","token","accesToken","catch","error","title","handleClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Devi/Documents/Nikita/vgu-doc-project/src/components/SignUp.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux'// Получив пользователя, кладем его в redux\r\nimport {useNavigate} from 'react-router-dom'\r\nimport {getAuth, createUserWithEmailAndPassword} from \"firebase/auth\";\r\nimport {Form} from './Form'\r\nimport {setUser} from '../pages/store/slices/userSlice'\r\n\r\nimport React from 'react'\r\n\r\n const SignUp = () => {\r\n    const dispatch = useDispatch() // копия \r\n    const navigate = useNavigate()\r\n\r\n    \r\n    const handleRegister = (email, password) => { // функция, при вызове которой учетные данные из формы отправятся на сервер и мы получим нужного пользователя\r\n        const auth = getAuth();\r\n        \r\n        createUserWithEmailAndPassword(auth, email, password)  // Запрос , возвращает промис с определенной информацией о пользователе\r\n            .then(({user}) => {   // Нам нужен только пользователь, деструктурируем его\r\n              console.log(user);  \r\n              dispatch(setUser({  // Устанавливаем нужный объект, тот самый который мы ожидаем в payload\r\n                email: user.email,\r\n                id: user.uid,\r\n                token: user.accesToken\r\n              }))\r\n              navigate(\"/\")\r\n            } )\r\n            .catch(console.error)\r\n    } \r\n  return (\r\n    <Form \r\n    title = \"зарегистрироваться\"\r\n    handleClick = {handleRegister}\r\n    />\r\n  )\r\n}\r\nexport {SignUp}"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAAQC,WAAW,QAAO,kBAAkB;AAC5C,SAAQC,OAAO,EAAEC,8BAA8B,QAAO,eAAe;AACrE,SAAQC,IAAI,QAAO,QAAQ;AAC3B,SAAQC,OAAO,QAAO,iCAAiC;AAEvD,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGX,WAAW,EAAE,EAAC;EAC/B,MAAMY,QAAQ,GAAGX,WAAW,EAAE;EAG9B,MAAMY,cAAc,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IAAE;IAC1C,MAAMC,IAAI,GAAGd,OAAO,EAAE;IAEtBC,8BAA8B,CAACa,IAAI,EAAEF,KAAK,EAAEC,QAAQ,CAAC,CAAE;IAAA,CAClDE,IAAI,CAACC,IAAA,IAAY;MAAA,IAAX;QAACC;MAAI,CAAC,GAAAD,IAAA;MAAS;MACpBE,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBR,QAAQ,CAACN,OAAO,CAAC;QAAG;QAClBS,KAAK,EAAEK,IAAI,CAACL,KAAK;QACjBQ,EAAE,EAAEH,IAAI,CAACI,GAAG;QACZC,KAAK,EAAEL,IAAI,CAACM;MACd,CAAC,CAAC,CAAC;MACHb,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,CAAE,CACFc,KAAK,CAACN,OAAO,CAACO,KAAK,CAAC;EAC7B,CAAC;EACH,oBACEnB,OAAA,CAACJ,IAAI;IACLwB,KAAK,EAAG,8GAAoB;IAC5BC,WAAW,EAAIhB;EAAe;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC5B;AAEN,CAAC;AAAAvB,EAAA,CA1BMD,MAAM;EAAA,QACQT,WAAW,EACXC,WAAW;AAAA;AAAAiC,EAAA,GAFzBzB,MAAM;AA2Bb,SAAQA,MAAM;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}