{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devi\\\\Documents\\\\Nikita\\\\vgu-doc-project\\\\src\\\\components\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Form } from './Form';\nimport { useDispatch } from 'react-redux'; // Получив пользователя, кладем его в redux\nimport { setUser } from '../pages/store/slices/userSlice';\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { useNavigate } from 'react-router-dom';\n\n// Возвращаем только форму, передавая ей нужную информацию\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const dispatch = useDispatch(); // копия \n  const navigate = useNavigate();\n\n  // нам нужно получить здесь пользователя\n  const handleLogin = (email, password) => {\n    // функция, при вызове которой учетные данные из формы отправятся на сервер и мы получим нужного пользователя\n    const auth = getAuth();\n    signInWithEmailAndPassword(auth, email, password) // Запрос , возвращает промис с определенной информацией о пользователе\n    .then(_ref => {\n      let {\n        user\n      } = _ref;\n      console.log(user);\n      dispatch(setUser({\n        // Устанавливаем нужный объект, тот самый который мы ожидаем в payload\n        email: user.email,\n        id: user.uid,\n        token: user.accesToken\n      }));\n      navigate(\"/\");\n    }).catch(() => alert('Пользователя не существует'));\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    title: \"\\u0412\\u043E\\u0439\\u0442\\u0438\",\n    handleClick: handleLogin\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"R1L93MxeLXzQXESpmjjjQSuQgvM=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = Login;\nexport { Login };\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","Form","useDispatch","setUser","getAuth","signInWithEmailAndPassword","useNavigate","jsxDEV","_jsxDEV","Login","_s","dispatch","navigate","handleLogin","email","password","auth","then","_ref","user","console","log","id","uid","token","accesToken","catch","alert","title","handleClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Devi/Documents/Nikita/vgu-doc-project/src/components/Login.jsx"],"sourcesContent":["import React from 'react'\r\nimport {Form} from './Form'\r\nimport { useDispatch } from 'react-redux'// Получив пользователя, кладем его в redux\r\nimport {setUser} from '../pages/store/slices/userSlice'\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport {useNavigate} from 'react-router-dom'\r\n\r\n\r\n\r\n\r\n// Возвращаем только форму, передавая ей нужную информацию\r\nconst Login = () => {\r\n\r\n    const dispatch = useDispatch() // копия \r\n    const navigate = useNavigate()\r\n    \r\n// нам нужно получить здесь пользователя\r\n    const handleLogin = (email, password) => { // функция, при вызове которой учетные данные из формы отправятся на сервер и мы получим нужного пользователя\r\n        const auth = getAuth();\r\n        signInWithEmailAndPassword(auth, email, password)  // Запрос , возвращает промис с определенной информацией о пользователе\r\n            .then(({user}) => {\r\n              console.log(user);  \r\n              dispatch(setUser({  // Устанавливаем нужный объект, тот самый который мы ожидаем в payload\r\n                email: user.email,\r\n                id: user.uid,\r\n                token: user.accesToken\r\n              }))\r\n              navigate(\"/\")\r\n            })\r\n            .catch(() => alert('Пользователя не существует'))\r\n    } \r\n    \r\n  return (\r\n    <Form \r\n    title='Войти'\r\n    handleClick={handleLogin}\r\n    />\r\n  )\r\n}\r\n\r\nexport {Login}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,IAAI,QAAO,QAAQ;AAC3B,SAASC,WAAW,QAAQ,aAAa;AACzC,SAAQC,OAAO,QAAO,iCAAiC;AACvD,SAASC,OAAO,EAAEC,0BAA0B,QAAQ,eAAe;AACnE,SAAQC,WAAW,QAAO,kBAAkB;;AAK5C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhB,MAAMC,QAAQ,GAAGT,WAAW,EAAE,EAAC;EAC/B,MAAMU,QAAQ,GAAGN,WAAW,EAAE;;EAElC;EACI,MAAMO,WAAW,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IAAE;IACvC,MAAMC,IAAI,GAAGZ,OAAO,EAAE;IACtBC,0BAA0B,CAACW,IAAI,EAAEF,KAAK,EAAEC,QAAQ,CAAC,CAAE;IAAA,CAC9CE,IAAI,CAACC,IAAA,IAAY;MAAA,IAAX;QAACC;MAAI,CAAC,GAAAD,IAAA;MACXE,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBR,QAAQ,CAACR,OAAO,CAAC;QAAG;QAClBW,KAAK,EAAEK,IAAI,CAACL,KAAK;QACjBQ,EAAE,EAAEH,IAAI,CAACI,GAAG;QACZC,KAAK,EAAEL,IAAI,CAACM;MACd,CAAC,CAAC,CAAC;MACHb,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,CAAC,CACDc,KAAK,CAAC,MAAMC,KAAK,CAAC,4BAA4B,CAAC,CAAC;EACzD,CAAC;EAEH,oBACEnB,OAAA,CAACP,IAAI;IACL2B,KAAK,EAAC,gCAAO;IACbC,WAAW,EAAEhB;EAAY;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACvB;AAEN,CAAC;AAAAvB,EAAA,CA3BKD,KAAK;EAAA,QAEUP,WAAW,EACXI,WAAW;AAAA;AAAA4B,EAAA,GAH1BzB,KAAK;AA6BX,SAAQA,KAAK;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}